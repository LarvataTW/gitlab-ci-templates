include:
  - "https://raw.githubusercontent.com/LarvataTW/gitlab-ci-templates/master/Jobs/Sonar-Test.gitlab-ci.yml"

image: mobiledevops/android-sdk-image:33.0.2

variables:
  LC_ALL: en_US.UTF-8
  LANG: en_US.UTF-8

stages:
  - build
  - test
  - package
  - deploy
  - notification

lint:
  tags:
    - android
  stage: build
  script:
    - ./gradlew lint
  artifacts:
    paths:
      - app/build/reports

# test put here

unitTests:
  tags:
    - android
  stage: test
  script:
    - ./gradlew test
  artifacts:
    when: on_failure
    paths:
      - app/build/reports/tests/testDebugUnitTest

.releaseByCIJob:
  tags:
    - android
  stage: package
  artifacts:
    name: "${CI_COMMIT_REF_SLUG}_${CI_JOB_NAME}_release"
    paths:
      - app/build/outputs/apk/$CI_JOB_NAME/release/*.apk

assemble_debug:
  tags:
    - android
  stage: package
  script:
    - ./gradlew assembleDebug --scan --build-cache --parallel --daemon
  artifacts:
    paths:
      - app/build/outputs/
    expire_in: 2 days

default_module_debug_ver_app_distribution:
  tags:
    - android
  only:
    - develop
  stage: deploy
  script:
    - echo "${FIREBASE_SA_JSON}" > firebase_sa.json
    - ./gradlew assembleDebug appDistributionUploadDebug --stacktrace

default_module_staging_ver_app_distribution:
  tags:
    - android
  only:
    refs:
      - master
    variables:
      - $STAGING_ENABLED
  stage: deploy
  script:
    - echo "${FIREBASE_SA_JSON}" > firebase_sa.json
    - base64 -d "${KEY_STORE_FILE}" > keyFile.keystore
    - echo "keystorePath=keyFile.keystore" > signing.properties
    - echo "keyAlias=${KEY_ALIAS}" >> signing.properties
    - echo "keyPassword=${KEY_PASSWORD}" >> signing.properties
    - echo "storePassword=${STORE_PASSWORD}" >> signing.properties
    - ./gradlew assembleStaging appDistributionUploadStaging --stacktrace

default_module_release_ver_aab_google_play:
  tags:
    - android
  only:
    - tags
  stage: deploy
  script:
    - echo $GOOGLE_PLAY_SA_JSON > google_play_sa.json
    - base64 -d "${KEY_STORE_FILE}" > keyFile.keystore
    - echo "keystorePath=keyFile.keystore" > signing.properties
    - echo "keyAlias=${KEY_ALIAS}" >> signing.properties
    - echo "keyPassword=${KEY_PASSWORD}" >> signing.properties
    - echo "storePassword=${STORE_PASSWORD}" >> signing.properties
    - ./gradlew bundleRelease publishReleaseBundle --stacktrace

.default_module_release_ver_app_distribution:
  tags:
    - android
  only:
    - master
  stage: deploy
  script:
    - echo "${FIREBASE_SA_JSON}" > firebase_sa.json
    - base64 -d "${KEY_STORE_FILE}" > keyFile.keystore
    - echo "keystorePath=keyFile.keystore" > signing.properties
    - echo "keyAlias=${KEY_ALIAS}" >> signing.properties
    - echo "keyPassword=${KEY_PASSWORD}" >> signing.properties
    - echo "storePassword=${STORE_PASSWORD}" >> signing.properties
    - ./gradlew assembleRelease appDistributionUploadRelease --stacktrace

    # .pushReleaseVerToGoogleDrive:
    #   tags:
    #     - deploy
    #   stage: package
    #   script:
    #    - gdrive
    # TODO: put whole file to google drive

discord_success_notification:
  only:
    refs:
      - master
      - tags
    variables:
      - $WEBHOOK_URL
      - $DISCORD_SUCCESS_NOTIFY_ROLE_ID
  stage: notification
  script:
    - curl -i -H "Accept:application/json" -H "Content-Type:application/json" -X POST --data "{\"embeds\":[{\"title\":\"$CI_COMMIT_REF_NAME staging ver. \/ google play internal test ver. \",\"description\":\"Success\",\"color\":5763719}],\"content\":\"$DISCORD_SUCCESS_NOTIFY_ROLE_ID\"}" $WEBHOOK_URL
  when: on_success

discord_failure_notification:
  only:
    refs:
      - master
      - tags
    variables:
      - $WEBHOOK_URL
      - $DISCORD_FAILURE_NOTIFY_ROLE_ID
  stage: notification
  script:
    - curl -i -H "Accept:application/json" -H "Content-Type:application/json" -X POST --data "{\"embeds\":[{\"title\":\"$CI_COMMIT_REF_NAME staging ver. \/ google play internal test ver. \",\"description\":\"Failure:$CI_PIPELINE_URL\",\"color\":15548997}],\"content\":\"$DISCORD_FAILURE_NOTIFY_ROLE_ID\"}" $WEBHOOK_URL
  when: on_failure

