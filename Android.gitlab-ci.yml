include:
  - project: 'larvata/devops/gitlab-ci-templates'
    ref: master
    file: 'Jobs/Sonar-Test.gitlab-ci.yml'

image: lakoo/android-ndk:25-25.0.3-r14b

variables:
  ANDROID_COMPILE_SDK: "29"
  ANDROID_BUILD_TOOLS: "29.0.3"
  ANDROID_SDK_TOOLS:   "4333796"

before_script:
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
  - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
  - unzip -d android-sdk-linux android-sdk.zip
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
  - chmod +x ./gradlew
  # temporarily disable checking for EPIPE error and use yes to accept all licenses
  - set +o pipefail
  - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
  - set -o pipefail

stages:
  - build
  - test
  - package
  - deploy

lint:
  tags:
    - android
  stage: build
  script:
    - ./gradlew lint
  artifacts:
    paths:
      - app/build/reports

# test put here

.releaseByCIJob:
  tags:
    - android
  stage: package
  artifacts:
    name: "${CI_COMMIT_REF_SLUG}_${CI_JOB_NAME}_release"
    paths:
      - app/build/outputs/apk/$CI_JOB_NAME/release/*.apk

assemble_debug:
  tags:
    - android
  stage: package
  script:
  - ./gradlew assembleDebug --scan --build-cache --parallel --daemon
  artifacts:
    paths:
      - app/build/outputs/
    expire_in: 2 days

default_module_debug_ver_app_distribution:
  tags:
    - android
  only:
    - develop
  stage: deploy
  script:
    - ./gradlew assembleDebug appDistributionUploadDebug --stacktrace

default_module_staging_ver_app_distribution:
  tags:
    - android
  only:
    refs:
      - master
    variables:
      - $STAGING_ENABLED
  stage: deploy
  script:
    - echo "${FIREBASE_SA_JSON}" > firebase_sa.json
    - base64 -d "${KEY_STORE_FILE}" > keyFile.keystore
    - echo "keystorePath=keyFile.keystore" > signing.properties
    - echo "keyAlias=${KEY_ALIAS}" >> signing.properties
    - echo "keyPassword=${KEY_PASSWORD}" >> signing.properties
    - echo "storePassword=${STORE_PASSWORD}" >> signing.properties
    - ./gradlew assembleStaging appDistributionUploadStaging --stacktrace

default_module_release_ver_aab_google_play:
  tags:
    - android
  only:
    - tags
  stage: deploy
  script:
    - echo $GOOGLE_PLAY_SA_JSON > google_play_sa.json
    - base64 -d "${KEY_STORE_FILE}" > keyFile.keystore
    - echo "keystorePath=keyFile.keystore" > signing.properties
    - echo "keyAlias=${KEY_ALIAS}" >> signing.properties
    - echo "keyPassword=${KEY_PASSWORD}" >> signing.properties
    - echo "storePassword=${STORE_PASSWORD}" >> signing.properties
    - ./gradlew bundleRelease publishReleaseBundle --stacktrace

.default_module_release_ver_app_distribution:
  tags:
    - android
  only:
    - master
  stage: deploy
  script:
    - echo "${FIREBASE_SA_JSON}" > firebase_sa.json
    - base64 -d "${KEY_STORE_FILE}" > keyFile.keystore
    - echo "keystorePath=keyFile.keystore" > signing.properties
    - echo "keyAlias=${KEY_ALIAS}" >> signing.properties
    - echo "keyPassword=${KEY_PASSWORD}" >> signing.properties
    - echo "storePassword=${STORE_PASSWORD}" >> signing.properties
    - ./gradlew assembleRelease appDistributionUploadRelease --stacktrace

# .pushReleaseVerToGoogleDrive:
#   tags:
#     - deploy
#   stage: package
#   script:
#    - gdrive
    # TODO: put whole file to google drive