include:
  - project: 'larvata/devops/gitlab-ci-templates'
    ref: master
    file: 'Jobs/Sonar-Test.gitlab-ci.yml'

image: jangrewe/gitlab-ci-android

variables:
  ANDROID_COMPILE_SDK: "29"
  ANDROID_BUILD_TOOLS: "29.0.3"
  ANDROID_SDK_TOOLS:   "4333796"

before_script:
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
  - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
  - unzip -d android-sdk-linux android-sdk.zip
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
  - chmod +x ./gradlew
  # temporarily disable checking for EPIPE error and use yes to accept all licenses
  - set +o pipefail
  - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
  - set -o pipefail

stages:
  - build
  - test
  - package

lintDebug:
  stage: build
  script:
    - ./gradlew -Pci --console=plain :app:lintDebug -PbuildDir=lint

gradlewLint:
  stage: test
  script:
    - ./gradlew lint --stacktrace
  artifacts:
    paths:
      - app/build/reports

.debug:
  stage: package
  paths:
    - app/build/outputs/apk/debug/*.apk

# push main app debug ver. to firebase-app-distribution
.appModuleDebugVerToFirebase:
  stage: package
  environment: Development
  only: develop
  script:
    - ./gradlew assembleDebug appDistributionUploadDebug --stacktrace

.release:
  stage: package
  only: master
  artifacts:
    name: "${CI_COMMIT_REF_SLUG}_${CI_JOB_NAME}_release"
    paths:
      - app/build/outputs/apk/$CI_JOB_NAME/release/*.apk
